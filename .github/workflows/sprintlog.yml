# Add line to end of sprintlog
# pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
# - name: Commit and push changes
# run: |
# git config user.name github-actions
# git config user.email github-actions@github.com
# git add .
# git commit -m "new line to sprintlog"
# git push
---
name: Sprintlog
on: [push]
env:
  FILE_TO_UPDATE: "SPRINTLOG.md"
jobs:
  Sprintlog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current PR
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: PR

      - name: Modify sprintlog
        if: steps.PR.outputs.pr_found == 'true'
        env:
          prTitle: ${{ steps.PR.outputs.pr_title }}
          prNumber: ${{ steps.PR.outputs.number }}
          prUrl: ${{ steps.PR.outputs.pr_url }}
        run: |
          echo "- ${prTitle} ([#${prNumber}](${prUrl}))" >> ${FILE_TO_UPDATE}

      - name: Check for changes
        id: git_diff
        run: |
          if [ ! -f "$FILE_TO_UPDATE" ]; then
              echo 'no such file'
              echo "changes_detected=false" >> $GITHUB_ENV
          else
              set +e
              git diff --quiet HEAD $FILE_TO_UPDATE
              if [ $? -ne 0 ]; then
              echo 'changes detected'
              echo "changes_detected=true" >> $GITHUB_ENV
              else
              echo 'changes not detected'
              echo "changes_detected=false" >> $GITHUB_ENV
              fi
              set -e
          fi

      - name: Commit changes
        if: env.changes_detected == 'true'
        run: |
          echo "Committing changes..."
          FILES_CHANGED=$(git status --porcelain | awk '{print $2}')
          for file in $FILES_CHANGED; do
            CONTENT=$(base64 -w 0 $file)
            FILENAME=$(basename $file)
            SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/contents/$file?ref=${GITHUB_REF##*/} | jq -r .sha)
            if [ "$SHA" == "null" ]; then
              SHA=""
            fi
            curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "{\"message\":\"Update $FILENAME\", \"content\":\"$CONTENT\", \"branch\":\"${GITHUB_REF##*/}\", \"sha\":\"$SHA\"}" \
              https://api.github.com/repos/${{ github.repository }}/contents/$file
          done
